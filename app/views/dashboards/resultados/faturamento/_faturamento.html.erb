<div class="col-lg-12 no-padding">
  <div class="panel panel-default dashboard-main-panel" style="margin-bottom: 15px !important; border-radius: 6px; box-shadow: 0 2px 10px rgba(0,0,0,0.05);">
    <div class="panel-heading" style="border-top-left-radius: 6px; border-top-right-radius: 6px; background: linear-gradient(to right, #f3f3f4, #ffffff); border-bottom: 1px solid #e7eaec; padding: 12px 15px;">
      <span style="font-weight: 600; color: #333333;"><i class="fa fa-money" style="color: #1ab394; margin-right: 8px;"></i>Faturamento</span>
      <div class="col-sm-3 pull-right" style="margin-top: -6px !important;" id="fat_grafico_por">
        <%= select_tag  'filtro_grafico_faturamento', options_for_select([
                                                              ['Por sistema', 1],
                                                              ['Por tipo', 2],
                                                              ['Ticket Médio', 3],
                                                              ['Por UF', 5]
                                                              ], 1), {:class => "form-control input-sm chosen-select", style: "border-radius: 4px;"} %>
      </div>
    </div>
    <div class="panel-body no-padding" style="padding: 0 !important;">
      <div class="col-lg-12 padding-left-right" style="padding: 15px; display: flex; min-height: 100%; min-width: 100%;">
        <!-- Layout otimizado para utilizar o espaço horizontal completo -->
        <div class="row" style="display: flex; min-height: 485px; min-width: 100%;">
          <!-- Coluna esquerda - Cards de faturamento -->
          <div class="col-md-3 padding-5" style="display: flex; flex-direction: column; height: 100%;">
            <div style="display: flex; flex-direction: column; height: 100%; gap: 30px;">
              <!-- Card de Faturamento Total -->
              <div class="ibox" style="margin-bottom: 15px; flex: 1 0 auto;">
                <div class="ibox-content product-box card-tech" style="border-radius: 10px; box-shadow: 0 10px 20px rgba(0,0,0,0.08); border-left: 4px solid #1ab394; transition: all 0.3s ease; background: linear-gradient(120deg, rgba(255,255,255,1) 0%, rgba(245,249,250,1) 100%);">
                  <div class="ibox-title ibox-title-without-border-style" style="padding-bottom: 10px;">
                    <h5 style="font-weight: 600; position: relative; z-index: 1;">
                      <i class="fa fa-money pulse-icon" style="color: #1ab394; margin-right: 8px;"></i>Faturamento total
                    </h5>
                    <span class="label label-info pull-right tech-badge" id="compentencia_faturamento_total" style="background-color: #1ab394; font-size: 11px; padding: 2px 8px; border-radius: 20px; box-shadow: 0 2px 5px rgba(26,179,148,0.3);"></span>
                  </div>
                  <div class="ibox-content padding-5" style="height: 60px !important; border-top: 1px solid rgba(0,0,0,0.05);">
                    <div class="col-lg-8 no-padding">
                      <h2 class="pull-left highlight-value" id="faturamento_total" style="margin-bottom: 3px; color: #1ab394; font-weight: 700; font-size: 24px;"></h2>
                    </div>
                    <div class="col-lg-4 no-padding">
                      <div class="col-lg-12 no-padding">
                        <div class="stat-percent font-bold text-danger glow-text" id="percentual_faturamento_total" style="font-size: 13px;"></div>
                      </div>
                      <div class="col-lg-12 no-padding">
                        <div class="pull-right">
                          <small id="faturamento_anterior" style="color: #888888;"></small>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              <!-- Card de Mensalidade -->
              <div class="ibox" style="margin-bottom: 15px; flex: 1 0 auto;">
                <div class="ibox-content product-box card-tech" style="border-radius: 10px; box-shadow: 0 10px 20px rgba(0,0,0,0.08); border-left: 4px solid #1c84c6; transition: all 0.3s ease; background: linear-gradient(120deg, rgba(255,255,255,1) 0%, rgba(245,248,252,1) 100%);">
                  <div class="ibox-title ibox-title-without-border-style" style="padding-bottom: 10px;">
                    <h5 style="font-weight: 600; position: relative; z-index: 1;">
                      <i class="fa fa-calendar-check-o pulse-icon" style="color: #1c84c6; margin-right: 8px;"></i>Fat. Mensalidade
                    </h5>
                    <span class="label label-info pull-right tech-badge" id="competencia_faturamento_mensalidade" style="background-color: #1c84c6; font-size: 11px; padding: 2px 8px; border-radius: 20px; box-shadow: 0 2px 5px rgba(28,132,198,0.3);"></span>
                  </div>
                  <div class="ibox-content padding-5" style="height: 60px !important; border-top: 1px solid rgba(0,0,0,0.05);">
                    <div class="col-lg-8 no-padding">
                      <h2 class="pull-left highlight-value" id="faturamento_mensalidade" style="margin-bottom: 3px; color: #1c84c6; font-weight: 700; font-size: 24px;"></h2>
                    </div>
                    <div class="col-lg-4 no-padding">
                      <div class="col-lg-12 no-padding">
                        <div class="stat-percent font-bold text-danger glow-text" id="percentual_faturamento_mensalidade" style="font-size: 13px;"></div>
                      </div>
                      <div class="col-lg-12 no-padding">
                        <div class="pull-right">
                          <small id="faturamento_mensalidade_anterior" style="color: #888888;"></small>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              <!-- Card de Instalação -->
              <div class="ibox" style="margin-bottom: 15px; flex: 1 0 auto;">
                <div class="ibox-content product-box card-tech" style="border-radius: 10px; box-shadow: 0 10px 20px rgba(0,0,0,0.08); border-left: 4px solid #f8ac59; transition: all 0.3s ease; background: linear-gradient(120deg, rgba(255,255,255,1) 0%, rgba(252,248,245,1) 100%);">
                  <div class="ibox-title ibox-title-without-border-style" style="padding-bottom: 10px;">
                    <h5 style="font-weight: 600; position: relative; z-index: 1;">
                      <i class="fa fa-plug pulse-icon" style="color: #f8ac59; margin-right: 8px;"></i>Fat. Instalação
                    </h5>
                    <span class="label label-info pull-right tech-badge" id="competencia_faturamento_instalacao" style="background-color: #f8ac59; font-size: 11px; padding: 2px 8px; border-radius: 20px; box-shadow: 0 2px 5px rgba(248,172,89,0.3);"></span>
                  </div>
                  <div class="ibox-content padding-5" style="height: 60px !important; border-top: 1px solid rgba(0,0,0,0.05);">
                    <div class="col-lg-8 no-padding">
                      <h2 class="pull-left highlight-value" id="faturamento_instalacao" style="margin-bottom: 3px; color: #f8ac59; font-weight: 700; font-size: 24px;"></h2>
                    </div>
                    <div class="col-lg-4 no-padding">
                      <div class="col-lg-12 no-padding">
                        <div class="stat-percent font-bold text-danger glow-text" id="percentual_faturamento_instalacao" style="font-size: 13px;"></div>
                      </div>
                      <div class="col-lg-12 no-padding">
                        <div class="pull-right">
                          <small id="faturamento_instalacao_anterior" style="color: #888888;"></small>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              <!-- Card de Outros -->
              <div class="ibox" style="margin-bottom: 0; flex: 1 0 auto;">
                <div class="ibox-content product-box card-tech" style="border-radius: 10px; box-shadow: 0 10px 20px rgba(0,0,0,0.08); border-left: 4px solid #9575cd; transition: all 0.3s ease; background: linear-gradient(120deg, rgba(255,255,255,1) 0%, rgba(248,245,252,1) 100%);">
                  <div class="ibox-title ibox-title-without-border-style" style="padding-bottom: 10px;">
                    <h5 style="font-weight: 600; position: relative; z-index: 1;">
                      <i class="fa fa-cubes pulse-icon" style="color: #9575cd; margin-right: 8px;"></i>Fat. Outros
                    </h5>
                    <span class="label label-info pull-right tech-badge" id="competencia_faturamento_outros" style="background-color: #9575cd; font-size: 11px; padding: 2px 8px; border-radius: 20px; box-shadow: 0 2px 5px rgba(149,117,205,0.3);"></span>
                  </div>
                  <div class="ibox-content padding-5" style="height: 60px !important; border-top: 1px solid rgba(0,0,0,0.05);">
                    <div class="col-lg-8 no-padding">
                      <h2 class="pull-left highlight-value" id="faturamento_outros" style="margin-bottom: 3px; color: #9575cd; font-weight: 700; font-size: 24px;"></h2>
                    </div>
                    <div class="col-lg-4 no-padding">
                      <div class="col-lg-12 no-padding">
                        <div class="stat-percent font-bold text-danger glow-text" id="percentual_faturamento_outros" style="font-size: 13px;"></div>
                      </div>
                      <div class="col-lg-12 no-padding">
                        <div class="pull-right">
                          <small id="faturamento_outros_anterior" style="color: #888888;"></small>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Coluna central - Gráfico principal -->
          <div class="col-md-6 padding-5" style="display: flex; flex-direction: column; height: 100%;">
            <!-- Div com altura fixa para o gráfico principal -->
            <div class="ibox" style="margin-bottom: 15px; flex: 3;">
              <div class="ibox-content product-box card-tech" style="border-radius: 10px; box-shadow: 0 10px 20px rgba(0,0,0,0.08); transition: all 0.3s ease; background: linear-gradient(120deg, rgba(255,255,255,1) 0%, rgba(248,250,252,1) 100%); height: 100%;">
                <div class="ibox-title ibox-title-without-border-style" style="padding-bottom: 10px;">
                  <span class="label label-info pull-right tech-badge" style="background-color: #1ab394; font-size: 11px; padding: 2px 8px; border-radius: 20px; box-shadow: 0 2px 5px rgba(26,179,148,0.3);">Anual</span>
                  <h5 style="font-weight: 600; position: relative; z-index: 1;">
                    <i class="fa fa-bar-chart pulse-icon" style="color: #1ab394; margin-right: 8px;"></i>Faturamento
                  </h5>
                </div>
                <div class="ibox-content padding-2" style="border-top: 1px solid rgba(0,0,0,0.05); height: calc(100% - 45px);">
                  <div id="faturamento_12_meses" style="height: 100%; width: 100%;"></div>
                </div>
              </div>
            </div>
            
            <!-- Visualização discreta do faturamento total do ano -->
            <div class="ibox" style="margin-top: 15px; margin-bottom: 0; flex: 1; max-height: 150px;">
              <div class="ibox-content product-box card-tech" style="border-radius: 10px; box-shadow: 0 10px 20px rgba(0,0,0,0.08); overflow: hidden; position: relative; transition: all 0.3s ease; background: linear-gradient(120deg, rgba(255,255,255,1) 0%, rgba(248,250,252,1) 100%); height: 100%;">
                <!-- Fundo com gradiente e efeito -->
                <div style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(135deg, rgba(26,179,148,0.03) 0%, rgba(26,179,148,0.08) 100%); z-index: 0;"></div>
                <div class="animated-background"></div>
                
                <div class="row" style="position: relative; z-index: 1; height: 100%;">
                  <div class="col-xs-8">
                    <h3 class="no-margins" style="font-size: 16px; color: #676a6c; font-weight: 600;">
                      <i class="fa fa-line-chart pulse-icon" style="margin-right: 5px; color: #1ab394;"></i> 
                      FATURAMENTO TOTAL <span id="ano-atual-faturamento" style="font-weight: 700;"></span>
                    </h3>
                    
                    <!-- Div separadora para criar espaço visual -->
                    <div style="height: 15px;"></div>
                    
                    <h2 id="total-ano-faturamento" class="no-margins highlight-value" style="font-size: 28px; color: #1ab394; font-weight: 700; letter-spacing: -0.5px;"></h2>
                    
                    <div class="row" style="margin-top: 12px;">
                      <div class="col-xs-12">
                        <div style="display: flex; align-items: center;">
                          <div class="progress" style="height: 10px; margin-bottom: 0; flex-grow: 1; border-radius: 20px; background-color: rgba(220,220,220,0.3); box-shadow: inset 0 1px 2px rgba(0,0,0,0.1);">
                            <div id="progresso-faturamento" class="progress-bar progress-animated" style="width: 0%; border-radius: 20px; background: linear-gradient(90deg, #1ab394 0%, #21d8b5 100%);"></div>
                          </div>
                          <span id="porcentagem-meta" style="margin-left: 8px; font-size: 12px; color: #676a6c; min-width: 40px; text-align: right;"></span>
                        </div>
                      </div>
                    </div>
                  </div>
                  
                  <div class="col-xs-4 text-right">
                    <div id="goal-indicator" style="background-color: rgba(100,149,237,0.1); padding: 10px; border-radius: 8px; margin-bottom: 8px; box-shadow: 0 3px 10px rgba(0,0,0,0.05);">
                      <div style="font-size: 12px; color: #676a6c;">META <span id="ano-meta"></span></div>
                      <div id="valor-meta" class="highlight-value" style="font-size: 14px; font-weight: 600; color: #4682B4;"></div>
                      <div style="margin-top: 5px; display: flex; align-items: center; justify-content: flex-end;">
                        <div style="font-size: 11px; color: #676a6c; margin-right: 5px;">Probabilidade:</div>
                        <div id="probabilidade-meta" class="glow-text" style="font-size: 13px; font-weight: 600;"></div>
                      </div>
                    </div>
                    <div style="font-size: 12px; margin-bottom: 3px;">
                      <span id="valor-ano-anterior" style="color: #676a6c;"></span>
                    </div>
                    <p id="comparativo-ano-faturamento" class="glow-text" style="font-size: 12px; margin-bottom: 0;"></p>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Coluna direita - Tabela de sistemas e gráfico de pizza -->
          <div class="col-md-3 padding-5" style="display: flex; flex-direction: column; height: 100%;">
            <!-- Div com altura fixa para o gráfico de pizza -->
            <div class="ibox" style="margin-bottom: 15px; flex: 3;">
              <div class="ibox-content product-box card-tech" style="border-radius: 10px; box-shadow: 0 10px 20px rgba(0,0,0,0.08); transition: all 0.3s ease; background: linear-gradient(120deg, rgba(255,255,255,1) 0%, rgba(248,250,252,1) 100%); height: 100%;">
                <div class="ibox-title ibox-title-without-border-style" style="padding-bottom: 10px;">
                  <span class="label label-info pull-right tech-badge" id="compentencia_faturamento_tipo" style="background-color: #23c6c8; font-size: 11px; padding: 2px 8px; border-radius: 20px; box-shadow: 0 2px 5px rgba(35,198,200,0.3);"></span>
                  <h5 style="font-weight: 600; position: relative; z-index: 1;">
                    <i class="fa fa-pie-chart pulse-icon" style="color: #1ab394; margin-right: 8px;"></i>Faturamento
                  </h5>
                </div>
                <div class="ibox-content padding-5" style="border-top: 1px solid rgba(0,0,0,0.05); height: calc(100% - 45px);">
                  <div id="faturamento_por_tipo" style="height: 100%; width: 100%;"></div>
                </div>
              </div>
            </div>
            
            <!-- Tabela de faturamento por sistema -->
            <div class="ibox" style="margin-top: 15px; margin-bottom: 0; flex: 1; max-height: 150px;">
              <div class="ibox-content product-box card-tech" style="border-radius: 10px; box-shadow: 0 10px 20px rgba(0,0,0,0.08); transition: all 0.3s ease; background: linear-gradient(120deg, rgba(255,255,255,1) 0%, rgba(248,250,252,1) 100%); height: 100%;">
                <div class="ibox-title ibox-title-without-border-style" style="padding-bottom: 10px;">
                  <span class="label label-info pull-right tech-badge" id="competencia_tabela_sistemas" style="background-color: #23c6c8; font-size: 11px; padding: 2px 8px; border-radius: 20px; box-shadow: 0 2px 5px rgba(35,198,200,0.3);"></span>
                  <h5 style="font-weight: 600; position: relative; z-index: 1;">
                    <i class="fa fa-table pulse-icon" style="color: #1ab394; margin-right: 8px;"></i>Por sistema
                  </h5>
                </div>
                <div class="ibox-content padding-5" style="border-top: 1px solid rgba(0,0,0,0.05); height: calc(100% - 45px); overflow: hidden;">
                  <div class="table-responsive" id="tabela_faturamento_sistemas" style="height: 100%; overflow-y: auto;">
                    <!-- O conteúdo da tabela será preenchido pelo JavaScript -->
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
.h30{
    height: 30px !important;
}

/* Estilos adicionais para melhorar a aparência */
.padding-left-5 {
    padding-left: 5px !important;
}

.padding-right-5 {
    padding-right: 5px !important;
}

/* Efeitos tecnológicos para os cards */
.card-tech {
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
}

.card-tech:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 30px rgba(0,0,0,0.12) !important;
}

/* Animação para ícones */
.pulse-icon {
    display: inline-block;
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}

/* Efeito de destaque para os valores */
.highlight-value {
    position: relative;
    transition: all 0.3s ease;
}

.highlight-value:before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 30%;
    background-color: rgba(26,179,148,0.1);
    z-index: -1;
    border-radius: 3px;
    transition: height 0.3s ease;
}

/* Efeito de glow para textos importantes */
.glow-text {
    transition: all 0.3s ease;
}

.text-success.glow-text {
    text-shadow: 0 0 5px rgba(26,179,148,0.3);
}

.text-danger.glow-text {
    text-shadow: 0 0 5px rgba(237,85,101,0.3);
}

/* Badges tecnológicas */
.tech-badge {
    position: relative;
    overflow: hidden;
}

.tech-badge:after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(60deg, rgba(255,255,255,0) 30%, rgba(255,255,255,0.5) 50%, rgba(255,255,255,0) 70%);
    transform: rotate(30deg);
    animation: shine 3s infinite;
}

@keyframes shine {
    0% { left: -100%; }
    20% { left: 100%; }
    100% { left: 100%; }
}

/* Animação para a barra de progresso */
.progress-animated {
    position: relative;
    overflow: hidden;
}

.progress-animated:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background-image: linear-gradient(
        -45deg, 
        rgba(255, 255, 255, .2) 25%, 
        transparent 25%, 
        transparent 50%, 
        rgba(255, 255, 255, .2) 50%, 
        rgba(255, 255, 255, .2) 75%, 
        transparent 75%, 
        transparent
    );
    z-index: 1;
    background-size: 20px 20px;
    animation: move 2s linear infinite;
    border-radius: 20px;
}

@keyframes move {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: 20px 20px;
    }
}

/* Fundo animado sutil */
.animated-background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(125deg, transparent 30%, rgba(26,179,148,0.05) 38%, rgba(26,179,148,0.05) 40%, transparent 48%);
    background-size: 200% 200%;
    animation: shine-background 3s infinite;
    z-index: 0;
}

@keyframes shine-background {
    0% { background-position: 200% 100%; }
    100% { background-position: 0% 0%; }
}

/* Melhoria na responsividade para telas menores */
@media (max-width: 992px) {
    .col-md-3, .col-md-6, .col-md-2 {
        margin-bottom: 15px;
    }
}

/* Garantir que não haja espaços em branco nas laterais */
.row {
    margin-left: 0;
    margin-right: 0;
}

.col-lg-12.padding-left-right {
    padding-left: 0 !important;
    padding-right: 0 !important;
}

.panel-body {
    padding: 0 !important;
}

/* Scroll personalizado para as tabelas */
.table-responsive::-webkit-scrollbar {
    width: 6px;
    height: 6px;
}

.table-responsive::-webkit-scrollbar-track {
    background: rgba(0,0,0,0.05);
    border-radius: 10px;
}

.table-responsive::-webkit-scrollbar-thumb {
    background: rgba(26,179,148,0.3);
    border-radius: 10px;
}

.table-responsive::-webkit-scrollbar-thumb:hover {
    background: rgba(26,179,148,0.5);
}

/* Estilos para a tabela de UF */
.google-table-header {
  background-color: #f5f5f5;
  font-weight: 600;
  font-size: 12px;
  height: 32px;
}

.google-table-row, .google-table-row-odd {
  height: 30px;
  font-size: 12px;
}

.google-table-cell {
  padding: 4px 8px !important;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.google-visualization-table-div-page {
  text-align: center !important;
  padding: 5px 0 !important;
  height: 30px !important;
  overflow: hidden !important;
}

/* Fixar a altura da área de visualização */
#faturamento_por_tipo {
  max-height: 100% !important;
  height: 100% !important;
  overflow: hidden !important;
}

/* Garantir que a tabela de visualização do Google não ultrapasse o container */
.google-visualization-table {
  max-height: 100% !important;
  height: auto !important;
  overflow: hidden !important;
}

/* Ajustar a tabela interna */
.google-visualization-table-table {
  width: 100% !important;
  table-layout: fixed !important;
}
</style>

<script>
  // Inicializar os gráficos quando a página carregar
  $(document).ready(function() {
    console.log("Documento pronto, inicializando faturamento...");
    
    // Verificar se o Google Charts já foi carregado
    if (typeof google !== 'undefined' && google.charts) {
      // Se já estiver carregado, inicializar os gráficos
      inicializarGraficos();
    } else {
      // Se não estiver carregado, esperar um pouco e tentar novamente
      console.log("Esperando Google Charts carregar...");
      setTimeout(function() {
        inicializarGraficos();
      }, 1000);
    }
    
    // Função para inicializar todos os gráficos
    function inicializarGraficos() {
      console.log("Inicializando gráficos de faturamento");
      // Inicializar gráfico principal
      drawFaturamento12Meses();
      
      // Carregar a tabela de sistemas independente do filtro selecionado
      drawSistemasTabela();
      
      // Aplicar o filtro selecionado inicialmente
      aplicarFiltroSelecionado();
      
      // Forçar redimensionamento para garantir que os gráficos sejam renderizados
      setTimeout(function() {
        window.dispatchEvent(new Event('resize'));
      }, 300);
    }
    
    // Função auxiliar para aplicar o filtro selecionado
    function aplicarFiltroSelecionado() {
      var filtroValor = parseInt($('#filtro_grafico_faturamento').val());
      console.log("Aplicando filtro: ", filtroValor);
      
      if (filtroValor === 2) {
        faturamentoPorTipo(0, 0, 0); // Inicializa com zeros, será atualizado pelos dados
      } else if (filtroValor === 3) {
        drawFaturamentoMedio();
      } else if (filtroValor === 5) {
        drawFaturamentoPorUF();
      } else {
        drawChartFaturamentoSistema();
      }
    }
    
    // Registrar o handler de eventos para o dropdown do filtro
    $('#filtro_grafico_faturamento').on('change', function() {
      console.log("Filtro alterado para: " + $(this).val() + " (tipo: " + typeof $(this).val() + ")");
      aplicarFiltroSelecionado();
    });
  });

  function drawFaturamento12Meses() {
    $.getJSON("/dashboards/get_total_faturamento_12_meses?empresa=" + $('#empresas_financeiro_id').val() +
        "&estado=" + $('#estado_financeiro_id').val(), function(data) {
        var dataArray = [
            ['Mês', 'Valor', 'Valor', 'Valor Instalação', 'Valor Mensalidade',
                'Valor Outros'],
        ];
        console.log("Filtro atual: ", parseInt($('#filtro_grafico_faturamento').val()));
        for (var i = 0; i < data.length; i++) {
            var row = [data[i].data, parseFloat(data[i].totalgeral), parseFloat(data[i].totalgeral),
                parseFloat(data[i].valorinstalacao), parseFloat(data[i].valormensalidade), parseFloat(data[i].valoroutros)];
            dataArray.push(row);
        }

        var meses = data;
        var result = null;
        $.getJSON("/dashboards/get_total_faturamento_mes_anterior?empresa=" + $('#empresas_financeiro_id').val() +
            "&estado=" + $('#estado_financeiro_id').val(), function(ret) {
            result = ret;
            preencherPainelFaturamentoTotal(  parseFloat($(meses).get(-1).totalgeral),
                $(meses).get(-1).data,
                parseFloat($(result).get(-1).totalgeral),
                parseFloat($(meses).get(-1).valormensalidade),
                parseFloat($(result).get(-1).valormensalidade),
                parseFloat($(meses).get(-1).valorinstalacao),
                parseFloat($(result).get(-1).valorinstalacao),
                parseFloat($(meses).get(-1).valoroutros),
                parseFloat($(result).get(-1).valoroutros));
                
            // Adicionar chamada para atualizar indicadores de crescimento do faturamento
            calcularEExibirIndicadoresCrescimentoFaturamento(meses);
            
            // Após preencher os painéis, também aplicar o filtro novamente
            var filtroValor = parseInt($('#filtro_grafico_faturamento').val());
            console.log("Aplicando filtro após drawFaturamento12Meses: ", filtroValor);
            
            // Garantir que a tabela de sistemas esteja sempre atualizada
            drawSistemasTabela();
            
            if (filtroValor === 2) {
              faturamentoPorTipo(parseFloat($(meses).get(-1).valormensalidade), 
                               parseFloat($(meses).get(-1).valorinstalacao), 
                               parseFloat($(meses).get(-1).valoroutros));
            } else if (filtroValor === 3) {
              drawFaturamentoMedio();
            } else if (filtroValor === 5) {
              drawFaturamentoPorUF();
            } else {
              drawChartFaturamentoSistema();
            }
        });
        
        $('#fatDiv').attr({title: "Dados aos quais comparam o fechamento do mês passado com o resultado até o dia atual."});
        
        var options = {
            'chartArea': {'width': '80%', 'height': '60%'},
            hAxis: {title: 'Mês',  textStyle: {fontSize: 9, color: 'blue'}},
            seriesType: 'bars',
            series: {1: {type: 'line', color: 'black', format: 'short'}},
            legend: 'none',
            vAxis: {viewWindowMode: "explicit", viewWindow: {min: 0}, format: 'short'},
            animation: { easing: 'in', duration: 500, startup: true, displayLegendValues: false}
        };
        var chart = new google.visualization.ComboChart(document.getElementById('faturamento_12_meses'));

        function selectHandler() {
            var selectedItem = chart.getSelection()[0];
            if (selectedItem) {
                var ultimo = selectedItem.row-1;
                if(ultimo == -1)
                    ultimo = 0;

                preencherPainelFaturamentoTotal(parseFloat(data.getValue(selectedItem.row, 1)),
                    data.getValue(selectedItem.row, 0),
                    parseFloat(data.getValue(ultimo, 1)),
                    parseFloat(data.getValue(selectedItem.row, 4)),
                    parseFloat(data.getValue(ultimo, 4)),
                    parseFloat(data.getValue(selectedItem.row, 3)),
                    parseFloat(data.getValue(ultimo, 3)),
                    parseFloat(data.getValue(selectedItem.row, 5)),
                    parseFloat(data.getValue(ultimo, 5)));
                
                var filtroValor = parseInt($('#filtro_grafico_faturamento').val());
                if (filtroValor === 2) {
                  faturamentoPorTipo(parseFloat(data.getValue(selectedItem.row, 4)), 
                                   parseFloat(data.getValue(selectedItem.row, 3)), 
                                   parseFloat(data.getValue(selectedItem.row, 5)));
                } else if (filtroValor === 3) {
                  drawFaturamentoMedio();
                } else if (filtroValor === 5) {
                  drawFaturamentoPorUF();
                } else {
                  drawChartFaturamentoSistema();
                }
                
                // Atualizar a tabela de sistemas com os dados do mês selecionado
                drawSistemasTabela(data.getValue(selectedItem.row, 0));
                
                $('#fatDiv').attr({title: "Dados aos quais comparam o fechamento do mês inteiro."});
            } else {
                preencherPainelFaturamentoTotal(  parseFloat($(meses).get(-1).totalgeral),
                    $(meses).get(-1).data,
                    parseFloat($(result).get(-1).totalgeral),
                    parseFloat($(meses).get(-1).valormensalidade),
                    parseFloat($(result).get(-1).valormensalidade),
                    parseFloat($(meses).get(-1).valorinstalacao),
                    parseFloat($(result).get(-1).valorinstalacao),
                    parseFloat($(meses).get(-1).valoroutros),
                    parseFloat($(result).get(-1).valoroutros));
                
                var filtroValor = parseInt($('#filtro_grafico_faturamento').val());
                if (filtroValor === 2) {
                  faturamentoPorTipo(parseFloat($(meses).get(-1).valormensalidade), 
                                   parseFloat($(meses).get(-1).valorinstalacao), 
                                   parseFloat($(meses).get(-1).valoroutros));
                } else if (filtroValor === 3) {
                  drawFaturamentoMedio();
                } else if (filtroValor === 5) {
                  drawFaturamentoPorUF();
                } else {
                  drawChartFaturamentoSistema();
                }
                
                // Garantir que a tabela de sistemas esteja sempre atualizada
                drawSistemasTabela();
                
                $('#fatDiv').attr({title: "Dados aos quais comparam o fechamento do mês passado com o resultado até o dia atual."});
            }
        }

        google.visualization.events.addListener(chart, 'select', selectHandler);

        var data = google.visualization.arrayToDataTable(dataArray);

        var formatter = new google.visualization.NumberFormat(
            {prefix: 'R$ ', negativeColor: 'red', negativeParens: true});
        formatter.format(data, 1); // Apply formatter to second column

        chart.draw(data, options);

        view = new google.visualization.DataView(data);
        view.hideColumns([3,4,5]);
        chart.draw(view, options);
    });
}

function preencherPainelFaturamentoTotal(valorFaturamento, competencia, valorAnterior, valorMensalidade, mensalidadeAnterior,
                                         valorInstalacao, instalacaoAnterior, valorOutros, outrosAnterior) {
    $('#compentencia_faturamento_total').text(competencia);
    $('#compentencia_faturamento_tipo').text(competencia);
    $('#competencia_faturamento_mensalidade').text(competencia);
    $('#competencia_faturamento_instalacao').text(competencia);
    $('#competencia_faturamento_outros').text(competencia);
    $('#faturamento_total').text(mascaraValor(valorFaturamento.toFixed(2)));
    $('#faturamento_anterior').text('Ant. ' + mascaraValor(valorAnterior.toFixed(2)));

    var valor = ((valorFaturamento*100 / valorAnterior)-100);
    $('#percentual_faturamento_total').text('');
    if(valor > 0){
        $('#percentual_faturamento_total').removeClass('text-danger').addClass('text-info');
        $('#percentual_faturamento_total').append(valor.toFixed(2)+'% <i class="fa fa-level-up"></i>');
    }else{
        $('#percentual_faturamento_total').removeClass('text-info').addClass('text-danger');
        $('#percentual_faturamento_total').append(valor.toFixed(2)+'% <i class="fa fa-level-down"></i>');
    }

    $('#faturamento_mensalidade').text(mascaraValor(valorMensalidade.toFixed(2)));
    $('#faturamento_mensalidade_anterior').text('Ant. ' + mascaraValor(mensalidadeAnterior.toFixed(2)));
    var valor = ((valorMensalidade*100 / mensalidadeAnterior)-100);
    $('#percentual_faturamento_mensalidade').text('');
    if(mensalidadeAnterior == 0){
        $('#percentual_faturamento_outros').removeClass('text-danger').addClass('text-info');
        $('#percentual_faturamento_outros').append(parseFloat(100).toFixed(2)+'% <i class="fa fa-level-up"></i>');
    }else if(valor > 0){
        $('#percentual_faturamento_mensalidade').removeClass('text-danger').addClass('text-info');
        $('#percentual_faturamento_mensalidade').append(valor.toFixed(2)+'% <i class="fa fa-level-up"></i>');
    }else{
        $('#percentual_faturamento_mensalidade').removeClass('text-info').addClass('text-danger');
        $('#percentual_faturamento_mensalidade').append(valor.toFixed(2)+'% <i class="fa fa-level-down"></i>');
    }

    $('#faturamento_instalacao').text(mascaraValor(valorInstalacao.toFixed(2)));
    $('#faturamento_instalacao_anterior').text('Ant. ' + mascaraValor(instalacaoAnterior.toFixed(2)));
    var valor = ((valorInstalacao*100 / instalacaoAnterior)-100);
    $('#percentual_faturamento_instalacao').text('');
    if(instalacaoAnterior == 0){
        $('#percentual_faturamento_instalacao').removeClass('text-danger').addClass('text-info');
        $('#percentual_faturamento_instalacao').append(parseFloat(100).toFixed(2)+'% <i class="fa fa-level-up"></i>');
    }else if(valor > 0){
        $('#percentual_faturamento_instalacao').removeClass('text-danger').addClass('text-info');
        $('#percentual_faturamento_instalacao').append(valor.toFixed(2)+'% <i class="fa fa-level-up"></i>');
    }else{
        $('#percentual_faturamento_instalacao').removeClass('text-info').addClass('text-danger');
        $('#percentual_faturamento_instalacao').append(valor.toFixed(2)+'% <i class="fa fa-level-down"></i>');
    }

    $('#faturamento_outros').text(mascaraValor(valorOutros.toFixed(2)));
    $('#faturamento_outros_anterior').text('Ant. ' + mascaraValor(outrosAnterior.toFixed(2)));
    var valor = ((valorOutros*100 / outrosAnterior)-100);
    $('#percentual_faturamento_outros').text('');
    if(outrosAnterior == 0){
        $('#percentual_faturamento_outros').removeClass('text-danger').addClass('text-info');
        $('#percentual_faturamento_outros').append(parseFloat(100).toFixed(2)+'% <i class="fa fa-level-up"></i>');
    }else if(valor > 0){
        $('#percentual_faturamento_outros').removeClass('text-danger').addClass('text-info');
        $('#percentual_faturamento_outros').append(valor.toFixed(2)+'% <i class="fa fa-level-up"></i>');
    }else{
        $('#percentual_faturamento_outros').removeClass('text-info').addClass('text-danger');
        $('#percentual_faturamento_outros').append(valor.toFixed(2)+'% <i class="fa fa-level-down"></i>');
    }
}

function faturamentoPorTipo(mensalidade, instalacao, outros) {
    console.log("Chamando faturamentoPorTipo com valores:", mensalidade, instalacao, outros);
    
    // Assegurar que estamos trabalhando com números
    mensalidade = parseFloat(mensalidade) || 0;
    instalacao = parseFloat(instalacao) || 0;
    outros = parseFloat(outros) || 0;
    
    var dataArray = [
        ['Tipo', 'Valor'],
    ];
    
    // Apenas adicionar valores positivos (maiores que zero)
    if (mensalidade > 0) {
        dataArray.push(['Mensalidade', mensalidade]);
    } else {
        dataArray.push(['Mensalidade', 0.01]); // Valor mínimo para mostrar no gráfico
    }
    
    if (instalacao > 0) {
        dataArray.push(['Instalação', instalacao]);
    } else {
        dataArray.push(['Instalação', 0.01]); // Valor mínimo para mostrar no gráfico
    }
    
    if (outros > 0) {
        dataArray.push(['Outros', outros]);
    } else {
        dataArray.push(['Outros', 0.01]); // Valor mínimo para mostrar no gráfico
    }
    
    console.log("Dados para o gráfico por tipo:", dataArray);
    
    var options = {
        'chartArea': {'width': '100%', 'height': '80%'},
        pieStartAngle: 50,
        legend: {position: 'bottom'},
        is3D: true,
        slices: {
            0: { color: '#1c84c6' },  // Mensalidade - Azul
            1: { color: '#f8ac59' },  // Instalação - Laranja
            2: { color: '#9575cd' }   // Outros - Roxo
        }
    };

    var chart = new google.visualization.PieChart(document.getElementById('faturamento_por_tipo'));
    var data = google.visualization.arrayToDataTable(dataArray);
    
    // Formatador para valores monetários
    var formatter = new google.visualization.NumberFormat({
        prefix: 'R$ ', 
        negativeColor: 'red', 
        negativeParens: true,
        fractionDigits: 2
    });
    formatter.format(data, 1); // Aplicar formatador à coluna de valores
    
    chart.draw(data, options);
}

function drawChartFaturamentoSistema() {
  console.log("Iniciando drawChartFaturamentoSistema");
  
  $.getJSON("/dashboards/get_total_faturamento_12_meses_sistema?empresa=" + $('#empresas_financeiro_id').val() +
        "&estado=" + $('#estado_financeiro_id').val() +
        "&data=" + $('#compentencia_faturamento_total').text(), function(data) {
        
    console.log("Dados recebidos para o gráfico por sistema:", data);
    
    var dataArray = [
        ['Sistema', 'Total'],
    ];
    dataArray.push(['Manager', parseInt(data["rs_man"] || 0)]);
    dataArray.push(['Light', parseInt(data["rs_lig"] || 0)]);
    dataArray.push(['Emissor', parseInt(data["rs_emi"] || 0)]);
    //dataArray.push(['Fiscal', parseInt(data["rs_f"])]);
    dataArray.push(['Gourmet', parseInt(data["rs_g"] || 0)]);
    dataArray.push(['Pró vendas', parseInt(data["rs_pro"] || 0)]);
    dataArray.push(['Athus', parseInt(data["rs_athus"] || 0)]);
    dataArray.push(['Trade', parseInt(data["rs_trade"] || 0)]);
    dataArray.push(['Emissor WEB', parseInt(data["rs_emissor_web"] || 0)]);
    dataArray.push(['Sem sistemas', parseInt(data["rs_sem_sistema"] || 0)]); 
    
    console.log("Array de dados preparado para o gráfico:", dataArray);

    var options = {
        'chartArea': {'width': '100%', 'height': '80%'},
        pieStartAngle: 50,
        legend: {position: 'bottom'},
        is3D: true,
        colors: ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22']
    };

    var chart = new google.visualization.PieChart(document.getElementById('faturamento_por_tipo'));
    var data = google.visualization.arrayToDataTable(dataArray);

    var formatter = new google.visualization.NumberFormat(
      {prefix: 'R$ ', negativeColor: 'red', negativeParens: true});
    formatter.format(data, 1); // Apply formatter to second column

    chart.draw(data, options);
    
    console.log("Gráfico por sistema desenhado");
    
    // Verificar se o gráfico foi renderizado corretamente
    setTimeout(function() {
      if ($('#faturamento_por_tipo:empty').length) {
        console.error("O gráfico por sistema parece vazio mesmo após renderização");
        // Tentar renderizar novamente
        chart.draw(data, options);
      }
    }, 500);
  }).fail(function(jqXHR, textStatus, errorThrown) {
    console.error("Erro ao carregar dados do gráfico por sistema:", textStatus, errorThrown);
  });
}

function drawFaturamentoMedio() {
  $.getJSON("/dashboards/get_total_faturamento_12_meses_sistema?empresa=" + $('#empresas_financeiro_id').val() +
        "&estado=" + $('#estado_financeiro_id').val() +
        "&data=" + $('#compentencia_faturamento_total').text(), function(data) {         
    
    var datatable = new google.visualization.DataTable();
        datatable.addColumn('string', 'Sistema');
        datatable.addColumn('number', 'Ticket médio');
        
      if (data["media_man"] > 0) 
        datatable.addRow(['Manager', parseFloat(data["media_man"])]);
      else
        {datatable.addRow(['Manager', parseFloat(0)]);}
      
      if (data["media_lig"] > 0) 
        datatable.addRow(['Light', parseFloat(data["media_lig"])]);
      else
        datatable.addRow(['Light', parseFloat(0)]);

      if (data["media_emi"] > 0)
        datatable.addRow(['Emissor', parseFloat(data["media_emi"])]);
      else
        datatable.addRow(['Emissor', parseFloat(0)]);
      
      // if (data["media_f"] > 0)
      //   datatable.addRow(['Fiscal', parseFloat(data["media_f"])]);
      // else
      //   datatable.addRow(['Fiscal', parseFloat(0)]);

      if (data["media_g"])
        datatable.addRow(['Gourmet', parseFloat(data["media_g"])]);
      else 
        datatable.addRow(['Gourmet', parseFloat(0)]);

      if (data["media_trade"])
        datatable.addRow(['Trade', parseFloat(data["media_trade"])]);
      else 
        datatable.addRow(['Trade', parseFloat(0)]);

      if (data["media_pro"])
        datatable.addRow(['Pró vendas', parseFloat(data["media_pro"])]);
      else
        datatable.addRow(['Pró vendas', parseFloat(0)]);

      if (data["media_athus"])
        datatable.addRow(['Athus', parseFloat(data["media_athus"])]);
      else
        datatable.addRow(['Athus', parseFloat(0)]);

      if (data["media_emissor_web"])
        datatable.addRow(['Emissor WEB', parseFloat(data["media_emissor_web"])]);
      else 
        datatable.addRow(['Emissor WEB', parseFloat(0)]);
        
      datatable.sort({column: 1, desc: true});

      var table = new google.visualization.Table(document.getElementById('faturamento_por_tipo'));
      var formatter = new google.visualization.NumberFormat(
          {prefix: 'R$ ', negativeColor: 'red', negativeParens: true});
      formatter.format(datatable, 1); // Apply formatter to second column
      
      table.draw(datatable, {allowHtml: true, width: '100%', height: '100%',});
  });
}

function drawSistemasTabela(competencia) {
  // Se a competência não for fornecida, usar a atual
  if (!competencia) {
    competencia = $('#compentencia_faturamento_total').text();
  }
  
  console.log("Carregando tabela de sistemas para competência:", competencia);
  
  $.getJSON("/dashboards/get_total_faturamento_12_meses_sistema?empresa=" + $('#empresas_financeiro_id').val() +
        "&estado=" + $('#estado_financeiro_id').val() +
        "&data=" + competencia, function(data) {
  
  // Preencher o span da competência
  $('#competencia_tabela_sistemas').text(competencia);
  
  // Criar a estrutura da tabela
  var html = '<table class="table table-bordered table-striped table-hover" style="margin-bottom: 0; font-size: 12px;">';
  html += '<thead><tr style="background-color: #f5f5f5;"><th style="width: 60%;">Sistema</th><th style="width: 40%; text-align: right;">Total</th></tr></thead>';
  html += '<tbody>';
  
  var total = 0;
  
  // Adicionar dados do Manager
  if (data["rs_man"] > 0) {
    html += '<tr><td>Manager</td><td style="text-align: right;">R$ ' + formatarValorMoeda(data["rs_man"]) + '</td></tr>';
    total += parseFloat(data["rs_man"]);
  }
  
  // Adicionar dados do Light
  if (data["rs_lig"] > 0) {
    html += '<tr><td>Light</td><td style="text-align: right;">R$ ' + formatarValorMoeda(data["rs_lig"]) + '</td></tr>';
    total += parseFloat(data["rs_lig"]);
  }
  
  // Adicionar dados do Emissor
  if (data["rs_emi"] > 0) {
    html += '<tr><td>Emissor</td><td style="text-align: right;">R$ ' + formatarValorMoeda(data["rs_emi"]) + '</td></tr>';
    total += parseFloat(data["rs_emi"]);
  }
  
  // Adicionar dados do Gourmet
  if (data["rs_g"] > 0) {
    html += '<tr><td>Gourmet</td><td style="text-align: right;">R$ ' + formatarValorMoeda(data["rs_g"]) + '</td></tr>';
    total += parseFloat(data["rs_g"]);
  }
  
  // Adicionar dados do Pró Vendas
  if (data["rs_pro"] > 0) {
    html += '<tr><td>Pró vendas</td><td style="text-align: right;">R$ ' + formatarValorMoeda(data["rs_pro"]) + '</td></tr>';
    total += parseFloat(data["rs_pro"]);
  }
  
  // Adicionar dados do Trade
  if (data["rs_trade"] > 0) {
    html += '<tr><td>Trade</td><td style="text-align: right;">R$ ' + formatarValorMoeda(data["rs_trade"]) + '</td></tr>';
    total += parseFloat(data["rs_trade"]);
  }
  
  // Adicionar dados do Athus
  if (data["rs_athus"] > 0) {
    html += '<tr><td>Athus</td><td style="text-align: right;">R$ ' + formatarValorMoeda(data["rs_athus"]) + '</td></tr>';
    total += parseFloat(data["rs_athus"]);
  }
  
  // Adicionar dados do Emissor WEB
  if (data["rs_emissor_web"] > 0) {
    html += '<tr><td>Emissor WEB</td><td style="text-align: right;">R$ ' + formatarValorMoeda(data["rs_emissor_web"]) + '</td></tr>';
    total += parseFloat(data["rs_emissor_web"]);
  }
  
  html += '</tbody>';
  html += '<tfoot><tr style="background-color: #f9f9f9; font-weight: 600;"><td>Total</td><td style="text-align: right;">R$ ' + formatarValorMoeda(total) + '</td></tr></tfoot>';
  html += '</table>';
  
  // Inserir a tabela no elemento
  $('#tabela_faturamento_sistemas').html(html);
  
  // Simular dados para o Top 5 Clientes (como exemplo)
  carregarTopClientes();
});
}

function carregarTopClientes() {
  // Definir a competência no label
  $('#competencia_top_clientes').text($('#compentencia_faturamento_total').text());
  
  // Dados simulados para o top 5 clientes
  var dadosClientes = [
    { nome: "Supermercado Modelo", valor: 15260.35 },
    { nome: "Lojas Americanas", valor: 12480.89 },
    { nome: "Restaurante Sabor & Cia", valor: 9750.25 },
    { nome: "Farmácia Saúde Total", valor: 8320.15 },
    { nome: "Hotel Central Park", valor: 7125.60 }
  ];
  
  // Criar a estrutura da tabela
  var html = '<table class="table table-bordered table-condensed" style="margin-bottom: 0; font-size: 11px;">';
  html += '<thead><tr style="background-color: #f5f5f5;"><th>Cliente</th><th style="text-align: right;">Valor</th></tr></thead>';
  html += '<tbody>';
  
  // Adicionar linhas para cada cliente
  for(var i = 0; i < dadosClientes.length; i++) {
    html += '<tr>';
    html += '<td>' + dadosClientes[i].nome + '</td>';
    html += '<td style="text-align: right;">R$ ' + formatarValorMoeda(dadosClientes[i].valor) + '</td>';
    html += '</tr>';
  }
  
  html += '</tbody>';
  html += '</table>';
  
  // Inserir a tabela no elemento
  $('#tabela_top_clientes').html(html);
}

function drawFaturamentoPorUF() {
  $.getJSON("/dashboards/get_total_faturamento_UF?empresa=" + $('#empresas_financeiro_id').val() +
        "&estado=" + $('#estado_financeiro_id').val() +
        "&data=" + $('#compentencia_faturamento_total').text(), function(data) {         
    
    var datatable = new google.visualization.DataTable();
        datatable.addColumn('string', 'Estado');
        datatable.addColumn('number', 'Total');

    for (var i = 0; i < data.length; i++) {
      datatable.addRow([data[i].sigla, parseFloat(data[i].faturamento)]);
    }
    
    // Ordenar por valor total (do maior para o menor)
    datatable.sort({column: 1, desc: true});
    
    // Definir classes para as linhas
    for (var i=0; i < datatable.getNumberOfRows(); i++){
      datatable.setRowProperty(i, 'className', 'h30');
    }
    
    var table = new google.visualization.Table(document.getElementById('faturamento_por_tipo'));

    var formatter = new google.visualization.NumberFormat(
        {prefix: 'R$ ', negativeColor: 'red', negativeParens: true});
    formatter.format(datatable, 1); // Apply formatter to second column
    
    // Adicionar opções para garantir que a tabela respeite o tamanho do container
    var options = {
      allowHtml: true,
      width: '100%',
      height: '100%',
      page: 'enable',
      pageSize: 8,
      cssClassNames: {
        headerRow: 'google-table-header',
        tableRow: 'google-table-row',
        oddTableRow: 'google-table-row-odd',
        selectedTableRow: 'google-table-row-selected',
        headerCell: 'google-table-header-cell',
        tableCell: 'google-table-cell',
        rowNumberCell: 'google-table-row-number-cell'
      }
    };
    
    // Desenhar a tabela com opções definidas
    table.draw(datatable, options);
    
    // Ajustar CSS da visualização da tabela após desenho
    setTimeout(function() {
      // Aplicar estilos diretamente na tabela gerada pelo Google Visualization
      var tableWrapper = $('#faturamento_por_tipo').find('.google-visualization-table');
      if (tableWrapper.length > 0) {
        tableWrapper.css({
          'max-height': 'calc(100% - 10px)',
          'overflow-y': 'auto',
          'overflow-x': 'hidden',
          'height': '100%'
        });
        
        // Ajustar tamanho da tabela interna
        tableWrapper.find('table').css({
          'width': '100%',
          'table-layout': 'fixed'
        });
      }
    }, 100);
  });
}

// Função para calcular e exibir o faturamento total do ano atual
function calcularEExibirIndicadoresCrescimentoFaturamento(dados) {
  if (!dados || dados.length < 2) {
    console.log("Dados insuficientes para calcular faturamento total");
    $('#total-ano-faturamento').html("Dados insuficientes");
    return;
  }
  
  console.log("Calculando faturamento total do ano");
  
  // Usando os dados do último mês disponível
  var mesAtual = dados[dados.length - 1];
  
  // Dados para comparação anual
  var partesMesAtual = mesAtual.data.split('/');
  if (partesMesAtual.length === 2) {
    var nomeMesAtual = partesMesAtual[0];
    var anoAtual = partesMesAtual[1];
    var anoAnterior = (parseInt(anoAtual) - 1).toString();
    
    // Organizar dados por mês e ano para cálculo do total do ano
    var dadosPorData = {};
    for (var i = 0; i < dados.length; i++) {
      var mes = dados[i];
      var partes = mes.data.split('/');
      if (partes.length === 2) {
        var nomeMes = partes[0];
        var ano = partes[1];
        
        if (!dadosPorData[ano]) {
          dadosPorData[ano] = {};
          dadosPorData[ano].meses = [];
        }
        
        dadosPorData[ano][nomeMes] = mes;
        dadosPorData[ano].meses.push(mes);
      }
    }
    
    // Calcular o faturamento acumulado e comparar com o ano passado
    calcularFaturamentoAcumulado(dadosPorData, anoAtual, anoAnterior);
  }
}

// Nova função simplificada para calcular o faturamento acumulado
function calcularFaturamentoAcumulado(dadosPorData, anoAtual, anoAnterior) {
  // Exibir o ano atual no título
  $('#ano-atual-faturamento').text(anoAtual);
  $('#ano-meta').text(anoAtual);
  
  // Inicializar totais
  var totalGeralAnoAtual = 0;
  var totalGeralAnoAnterior = 0;
  
  // Obter o mês atual
  var dataAtual = new Date();
  var mesAtualNumero = dataAtual.getMonth() + 1; // JavaScript conta meses de 0-11
  
  // Mapear nome do mês para número
  var mesesMap = {
    'Janeiro': 1, 'Fevereiro': 2, 'Março': 3, 'Abril': 4, 'Maio': 5, 'Junho': 6,
    'Julho': 7, 'Agosto': 8, 'Setembro': 9, 'Outubro': 10, 'Novembro': 11, 'Dezembro': 12
  };
  
  // Mapear número para nome do mês (para logs)
  var numeroParaMes = {};
  for (var mes in mesesMap) {
    numeroParaMes[mesesMap[mes]] = mes;
  }
  
  // Arrays para armazenar valores mensais (para projeção)
  var valoresMensaisCompletos = [];
  var mesesCompletos = 0;
  
  // Calcular totais do ano atual
  if (dadosPorData[anoAtual] && dadosPorData[anoAtual].meses) {
    var mesesAnoAtual = dadosPorData[anoAtual].meses;
    for (var i = 0; i < mesesAnoAtual.length; i++) {
      var mes = mesesAnoAtual[i];
      var nomeMes = mes.data.split('/')[0];
      var numeroMes = mesesMap[nomeMes];
      
      // Adicionar ao total geral do ano
      totalGeralAnoAtual += parseFloat(mes.totalgeral) || 0;
      
      // Para projeção, considerar apenas meses completos (anteriores ao atual)
      if (numeroMes < mesAtualNumero) {
        valoresMensaisCompletos.push(parseFloat(mes.totalgeral) || 0);
        mesesCompletos++;
        console.log("Mês completo considerado para projeção:", nomeMes, parseFloat(mes.totalgeral));
      }
    }
  }
  
  // Calcular totais do ano anterior (para comparação e meta)
  if (dadosPorData[anoAnterior] && dadosPorData[anoAnterior].meses) {
    var mesesAnoAnterior = dadosPorData[anoAnterior].meses;
    for (var i = 0; i < mesesAnoAnterior.length; i++) {
      var mes = mesesAnoAnterior[i];
      totalGeralAnoAnterior += parseFloat(mes.totalgeral) || 0;
    }
  }
  
  // Calcular a meta de 10% a mais que o ano anterior
  var metaAnual = totalGeralAnoAnterior * 1.10; // Meta de 10% acima do ano anterior
  
  // Calcular projeção anual baseada nos meses completos
  var projecaoAnual = 0;
  var probabilidadeMeta = 0;
  
  if (mesesCompletos > 0) {
    // Calcular média mensal baseada apenas em meses completos
    var mediaMensal = valoresMensaisCompletos.reduce((a, b) => a + b, 0) / mesesCompletos;
    
    // Projetar para o ano inteiro
    var mesesRestantes = 12 - mesesCompletos;
    var valorMesesCompletos = valoresMensaisCompletos.reduce((a, b) => a + b, 0);
    projecaoAnual = valorMesesCompletos + (mediaMensal * mesesRestantes);
    
    // Calcular probabilidade de atingir a meta
    probabilidadeMeta = (projecaoAnual / metaAnual) * 100;
    probabilidadeMeta = Math.min(100, probabilidadeMeta); // Limitar a 100%
    
    console.log("Projeção baseada em " + mesesCompletos + " meses completos:");
    console.log("Média mensal: R$" + mediaMensal.toFixed(2));
    console.log("Projeção anual: R$" + projecaoAnual.toFixed(2));
    console.log("Meta anual: R$" + metaAnual.toFixed(2));
    console.log("Probabilidade de atingir meta: " + probabilidadeMeta.toFixed(1) + "%");
  } else {
    // Fallback: se não houver meses completos, usar os dados atuais para uma estimativa básica
    // Quantos meses já se passaram (pelo menos parcialmente)
    var mesesPassadosParcialmente = dadosPorData[anoAtual] ? dadosPorData[anoAtual].meses.length : 0;
    
    if (mesesPassadosParcialmente > 0 && totalGeralAnoAtual > 0) {
      // Estimar com base na proporção do ano já passada
      var proporcaoAnoPassada = mesAtualNumero / 12;
      var estimativaAnual = totalGeralAnoAtual / proporcaoAnoPassada;
      
      // Calcular probabilidade
      probabilidadeMeta = (estimativaAnual / metaAnual) * 100;
      probabilidadeMeta = Math.min(100, probabilidadeMeta);
      
      console.log("Estimativa baseada na proporção do ano (sem meses completos):");
      console.log("Proporção do ano passada: " + (proporcaoAnoPassada * 100).toFixed(1) + "%");
      console.log("Estimativa anual: R$" + estimativaAnual.toFixed(2));
      console.log("Meta anual: R$" + metaAnual.toFixed(2));
      console.log("Probabilidade de atingir meta: " + probabilidadeMeta.toFixed(1) + "%");
    } else {
      console.log("Sem dados suficientes para calcular projeção");
    }
  }
  
  // Exibir o valor total com formatação BR
  $('#total-ano-faturamento').text('R$ ' + totalGeralAnoAtual.toLocaleString('pt-BR', {minimumFractionDigits: 2, maximumFractionDigits: 2}));
  
  // Exibir o valor da meta com formatação BR
  $('#valor-meta').text('R$ ' + metaAnual.toLocaleString('pt-BR', {minimumFractionDigits: 2, maximumFractionDigits: 2}));
  
  // Exibir o valor do ano anterior
  $('#valor-ano-anterior').text(anoAnterior + ': R$ ' + totalGeralAnoAnterior.toLocaleString('pt-BR', {minimumFractionDigits: 2, maximumFractionDigits: 2}));
  
  // Exibir probabilidade de atingir a meta
  if (mesesCompletos > 0 || (probabilidadeMeta > 0 && mesesPassadosParcialmente > 0)) {
    var classeProbabilidade = probabilidadeMeta >= 90 ? 'text-success' : 
                             (probabilidadeMeta >= 70 ? 'text-warning' : 'text-danger');
                                
    var mensagemBase = probabilidadeMeta.toFixed(0) + '%';
    var mensagemMeses = mesesCompletos > 0 
      ? ' (com base em ' + mesesCompletos + ' ' + (mesesCompletos === 1 ? 'mês' : 'meses') + ')'
      : ' (estimativa)';
    
    $('#probabilidade-meta').html('<span class="' + classeProbabilidade + '">' + mensagemBase + '</span>' + mensagemMeses);
  } else {
    $('#probabilidade-meta').text('Aguardando dados');
  }
  
  // Calcular e exibir a variação percentual em relação ao ano anterior
  if (totalGeralAnoAnterior > 0) {
    var variacaoGeral = ((totalGeralAnoAtual - totalGeralAnoAnterior) / totalGeralAnoAnterior) * 100;
    var sinalGeral = variacaoGeral >= 0 ? '+' : '';
    
    // Definir classe de cor baseada no valor
    var classeComparativo = variacaoGeral >= 0 ? 'text-success' : 'text-danger';
    
    // Adicionar texto de comparação com ano anterior
    $('#comparativo-ano-faturamento').html('<span class="' + classeComparativo + '">' + sinalGeral + variacaoGeral.toFixed(1) + '%</span> vs ' + anoAnterior);
    
    // Atualizar barra de progresso em relação à meta
    if (metaAnual > 0) {
      var porcentagemConcluida = Math.min(100, (totalGeralAnoAtual / metaAnual) * 100);
      $('#progresso-faturamento').css('width', porcentagemConcluida + '%');
      $('#porcentagem-meta').text(porcentagemConcluida.toFixed(0) + '%');
    }
  }
}

// Função auxiliar para formatar valores monetários
function formatarValorMoeda(valor) {
  return parseFloat(valor).toLocaleString('pt-BR', {minimumFractionDigits: 2, maximumFractionDigits: 2});
}

// Manter os estilos da badge e cores se necessário
$(document).ready(function() {
  $('head').append(`
    <style>
      .progress-bar {
        transition: width 1.5s ease-in-out;
      }
      
      .text-success {
        color: #1ab394;
      }
      
      .text-danger {
        color: #ed5565;
      }
      
      .text-warning {
        color: #f8ac59;
      }
      
      /* Adicionar animação para os números */
      @keyframes fadeIn {
        from { opacity: 0; transform: translateY(5px); }
        to { opacity: 1; transform: translateY(0); }
      }
      
      #total-ano-faturamento, #valor-meta, #valor-ano-anterior, #probabilidade-meta {
        animation: fadeIn 0.8s ease-out;
      }
    </style>
  `);
});

// Script para garantir inicialização dos gráficos
document.addEventListener('DOMContentLoaded', function() {
  // Forçar um redimensionamento após carregar para que os gráficos sejam renderizados corretamente
  setTimeout(function() {
    window.dispatchEvent(new Event('resize'));
  }, 200);
});

// Adicionar isto antes do final do script para ajudar a diagnosticar o problema
$('#filtro_grafico_faturamento').on('change', function() {
  var valorSelecionado = $(this).val();
  console.log("Valor do filtro alterado para:", valorSelecionado, "Tipo:", typeof valorSelecionado);
  
  // Limpar o container atual para evitar sobreposições
  $('#faturamento_por_tipo').empty();
});
</script>